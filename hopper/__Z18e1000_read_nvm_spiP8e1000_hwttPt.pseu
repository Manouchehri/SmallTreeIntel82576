    rdx = arg2;
    rsi = arg1;
    rbx = arg3;
    r14 = arg0;
    rax = *(int16_t *)(r14 + 0x4e8) & 0xffff;
    r15 = 0xffffffff;
    if (rax > rsi) {
            r13 = rsi & 0xffff;
            r12 = rdx & 0xffff;
            if ((r12 <= rax - r13) && (rdx != 0x0)) {
                    r15 = (*(r14 + 0x498))(r14);
                    if (r15 == 0x0) {
                            r15 = e1000_ready_nvm_eeprom(r14);
                            if (r15 == 0x0) {
                                    e1000_standby_nvm(r14);
                                    rcx = 0x3;
                                    if (((r13 > 0x7f ? 0x1 : 0x0) & ((*(int16_t *)(r14 + 0x4ec) & 0xffff) == 0x8 ? 0x1 : 0x0)) != 0x0) {
                                            rcx = 0xb;
                                    }
                                    e1000_shift_out_eec_bits(r14, rcx & 0xffff, *(int16_t *)(r14 + 0x4ee) & 0xffff);
                                    e1000_shift_out_eec_bits(r14, r13 + r13 & 0xffff, *(int16_t *)(r14 + 0x4ec) & 0xffff);
                                    do {
                                            *(int16_t *)rbx = ROL(e1000_shift_in_eec_bits(r14, 0x10), 0x8);
                                            rbx = rbx + 0x2;
                                            r12 = r12 - 0x1;
                                    } while (r12 != 0x0);
                            }
                            (*(r14 + 0x4a8))(r14);
                    }
            }
    }
    rax = r15;
    return rax;

