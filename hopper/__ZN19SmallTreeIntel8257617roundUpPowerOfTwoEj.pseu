    rbx = rsi;
    r14 = arg0;
    rax = *(int32_t *)(r14 + 0x784);
    if ((rax & 0x2) != 0x0) {
            _IOLog("%s %s: Entered   0x%08lx\n", r14 + 0x38b, "roundUpPowerOfTwo", rbx);
            rax = *(int32_t *)(r14 + 0x784);
    }
    rbx = (((((rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x4 | (rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x8 | ((rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x4 | (rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x10 | (((rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x4 | (rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x8 | ((rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x4 | (rbx - 0x1 >> 0x1 | rbx - 0x1) >> 0x2 | rbx - 0x1 >> 0x1 | rbx - 0x1) + 0x1;
    if ((rax & 0x2) != 0x0) {
            _IOLog("%s %s: Returning 0x%08lx\n", r14 + 0x38b, "roundUpPowerOfTwo", rbx);
    }
    rax = rbx;
    return rax;

