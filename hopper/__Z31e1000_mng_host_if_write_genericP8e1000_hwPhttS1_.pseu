    r8 = arg4;
    rcx = arg3;
    rdx = arg2;
    rsi = arg1;
    rdi = arg0;
    var_2C = 0x0;
    rax = 0xfffffffc;
    if ((rdx != 0x0) && ((rcx & 0xffff) + (rdx & 0xffff) <= 0x6f8)) {
            r9 = (rcx & 0xfffc) >> 0x2;
            r15 = rcx & 0x3;
            if (r15 != 0x0) {
                    r11 = r9 & 0xffff;
                    var_2C = *(int32_t *)(*(rdi + 0x8) + r11 * 0x4 + 0x8800);
                    rcx = rcx & 0x3;
                    r14 = rcx ^ 0x3;
                    r10 = r14 + rsi + 0x1;
                    r13 = *(int8_t *)r8;
                    rax = rcx;
                    do {
                            r12 = *(int8_t *)rsi;
                            rsi = rsi + 0x1;
                            *(int8_t *)(rbp + rax + 0xffffffffffffffd4) = r12;
                            r13 = r13 + r12;
                            *(int8_t *)r8 = r13;
                            rax = rax + 0x1;
                    } while ((rax & 0xffff) != 0x4);
                    *(int32_t *)(*(rdi + 0x8) + r11 * 0x4 + 0x8800) = var_2C;
                    r9 = r9 + 0x1;
                    rdx = !(sign_extend_64(r14) + rcx) + r15 + rdx;
            }
            else {
                    r10 = rsi;
            }
            r15 = rdx & 0x3;
            r13 = (rdx - r15 & 0xfffc) >> 0x2;
            rax = 0x0;
            if (r13 != 0x0) {
                    r12 = r9 & 0xffff;
                    r11 = ((rdx & 0xfffc) >> 0x2) - 0x1 & 0xffff;
                    var_38 = (((rdx & 0xfffc) >> 0x2) - 0x1 & 0xffff) * 0x4 + 0x4;
                    rdx = 0x0;
                    rsi = r10;
                    do {
                            rbx = *(int8_t *)r8;
                            rcx = 0x0;
                            do {
                                    *(int8_t *)(rbp + rcx + 0xffffffffffffffd4) = *(int8_t *)(rsi + rcx);
                                    rbx = rbx + *(int8_t *)(rsi + rcx);
                                    *(int8_t *)r8 = rbx;
                                    rcx = rcx + 0x1;
                            } while (rcx != 0x4);
                            rsi = rsi + 0x4;
                            *(int32_t *)(*(rdi + 0x8) + sign_extend_64(rdx + r12) * 0x4 + 0x8800) = var_2C;
                            rdx = rdx + 0x1;
                    } while ((rdx & 0xffff) < (r13 & 0xffff));
                    r11 = r11 + 0x1;
                    r10 = r10 + var_38;
            }
            else {
                    r11 = 0x0;
            }
            if (r15 != 0x0) {
                    rcx = r15 & 0xffff;
                    do {
                            if ((rax & 0xffff) < rcx) {
                                    rdx = *(int8_t *)r10;
                                    r10 = r10 + 0x1;
                            }
                            else {
                                    rdx = 0x0;
                            }
                            *(int8_t *)(rbp + rax + 0xffffffffffffffd4) = rdx;
                            *(int8_t *)r8 = *(int8_t *)r8 + rdx;
                            rax = rax + 0x1;
                    } while (rax != 0x4);
                    *(int32_t *)(*(rdi + 0x8) + sign_extend_64(r11 + (r9 & 0xffff)) * 0x4 + 0x8800) = var_2C;
                    rax = 0x0;
            }
    }
    return rax;

